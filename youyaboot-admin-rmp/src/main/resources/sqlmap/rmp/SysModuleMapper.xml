<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:323237052
-->
<mapper namespace="com.magicalcoder.youyaboot.admin.rmp.mapper.SysModuleMapper">
    <!-- SysModule -->
    <resultMap id="resultMap" type="SysModule">
        <id column="ID" property="id"/>
        <result column="MODULE_NAME" property="moduleName" />
        <result column="MODULE_URL" property="moduleUrl" />
        <result column="MODULE_CATEGORY_ID" property="moduleCategoryId" />
        <result column="SORT_NUM" property="sortNum" />
        <result column="MODULE_TITLE" property="moduleTitle" />
        <result column="IF_SHOW" property="ifShow" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        SELECT  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        FROM  <include refid="tableSql"/>  WHERE 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        SELECT  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        FROM  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        <include refid="pageStart"/>
        SELECT  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        <include refid="pageParam"/>
        FROM  <include refid="tableSql"/>  WHERE 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
        <include refid="pageEnd"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        <include refid="pageStart"/>
        SELECT  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        <include refid="pageParam"/>
        FROM  <include refid="tableSql"/>  WHERE  ID IN
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
        <include refid="pageEnd"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        SELECT count(1)  FROM  <include refid="tableSql"/>  WHERE 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="SysModule"  useGeneratedKeys="true" keyProperty="id" >
        <selectKey resultType="long" order="BEFORE" keyProperty="id">SELECT <choose><when test="id==null"> <include refid="sequenceNextValSql"/> </when><otherwise> #{id} </otherwise></choose>FROM DUAL</selectKey>
        INSERT into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="SysModule"  useGeneratedKeys="true" keyProperty="id" >
        <!-- 很抱歉 oracle 没有像mysql replace into 这样 的语句-->
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="SysModule"  useGeneratedKeys="true" keyProperty="id" >
        <selectKey resultType="long" order="BEFORE" keyProperty="id">SELECT <choose><when test="id==null"> <include refid="sequenceNextValSql"/> </when><otherwise> #{id} </otherwise></choose>FROM DUAL</selectKey>
        INSERT into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="SysModule"  useGeneratedKeys="true" keyProperty="id" >
        <!-- 很抱歉 oracle 没有像mysql replace into 这样 的语句-->
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="false" keyProperty="id" >
        INSERT all
        <foreach collection="list" item="item" index="index" open="" close="" separator="">
            into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
        SELECT 1 FROM DUAL
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="false" keyProperty="id" >
        <!-- 很抱歉 oracle 没有像mysql replace into 这样 的语句-->
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="false" keyProperty="id" >
        INSERT all
        <foreach collection="list" item="item" index="index" open="" close="" separator="">
            into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
        SELECT 1 FROM DUAL
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="false" keyProperty="id" >
        <!-- 很抱歉 oracle 没有像mysql replace into 这样 的语句-->
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        DELETE FROM <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        DELETE FROM <include refid="tableSql"/> WHERE 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        DELETE FROM <include refid="tableSql"/> WHERE ID IN <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="SysModule">
        UPDATE <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="SysModule">
        UPDATE <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            UPDATE <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            UPDATE <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="idIgnore_ == null or !idIgnore_">ID,</if>
            <if test="moduleNameIgnore_ == null or !moduleNameIgnore_">MODULE_NAME,</if>
            <if test="moduleUrlIgnore_ == null or !moduleUrlIgnore_">MODULE_URL,</if>
            <if test="moduleCategoryIdIgnore_ == null or !moduleCategoryIdIgnore_">MODULE_CATEGORY_ID,</if>
            <if test="sortNumIgnore_ == null or !sortNumIgnore_">SORT_NUM,</if>
            <if test="moduleTitleIgnore_ == null or !moduleTitleIgnore_">MODULE_TITLE,</if>
            <if test="ifShowIgnore_ == null or !ifShowIgnore_">IF_SHOW</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="idNotIgnore_ != null and idNotIgnore_">ID,</if>
         <if test="moduleNameNotIgnore_ != null and moduleNameNotIgnore_">MODULE_NAME,</if>
         <if test="moduleUrlNotIgnore_ != null and moduleUrlNotIgnore_">MODULE_URL,</if>
         <if test="moduleCategoryIdNotIgnore_ != null and moduleCategoryIdNotIgnore_">MODULE_CATEGORY_ID,</if>
         <if test="sortNumNotIgnore_ != null and sortNumNotIgnore_">SORT_NUM,</if>
         <if test="moduleTitleNotIgnore_ != null and moduleTitleNotIgnore_">MODULE_TITLE,</if>
         <if test="ifShowNotIgnore_ != null and ifShowNotIgnore_">IF_SHOW</if>
        </trim>
    </sql>
    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="id!=null">"ID",</if> "MODULE_NAME","MODULE_URL","MODULE_CATEGORY_ID","SORT_NUM","MODULE_TITLE","IF_SHOW",
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="moduleName!=null">#{moduleName},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="moduleUrl!=null">#{moduleUrl},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="moduleCategoryId!=null">#{moduleCategoryId},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="sortNum!=null">#{sortNum},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="moduleTitle!=null">#{moduleTitle},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="ifShow!=null">#{ifShow},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="id!=null">"ID",</if>
                <if test="moduleName!=null">"MODULE_NAME",</if>
                <if test="moduleUrl!=null">"MODULE_URL",</if>
                <if test="moduleCategoryId!=null">"MODULE_CATEGORY_ID",</if>
                <if test="sortNum!=null">"SORT_NUM",</if>
                <if test="moduleTitle!=null">"MODULE_TITLE",</if>
                <if test="ifShow!=null">"IF_SHOW",</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="id!=null">#{id},</when></choose>
                <choose><when test="moduleName!=null">#{moduleName},</when></choose>
                <choose><when test="moduleUrl!=null">#{moduleUrl},</when></choose>
                <choose><when test="moduleCategoryId!=null">#{moduleCategoryId},</when></choose>
                <choose><when test="sortNum!=null">#{sortNum},</when></choose>
                <choose><when test="moduleTitle!=null">#{moduleTitle},</when></choose>
                <choose><when test="ifShow!=null">#{ifShow},</when></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                "ID",
                "MODULE_NAME",
                "MODULE_URL",
                "MODULE_CATEGORY_ID",
                "SORT_NUM",
                "MODULE_TITLE",
                "IF_SHOW",

        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id}</when><otherwise><include refid="sequenceNextValSql"/></otherwise></choose>,
                <choose><when test="item.moduleName!=null">#{item.moduleName}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.moduleUrl!=null">#{item.moduleUrl}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.moduleCategoryId!=null">#{item.moduleCategoryId}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.sortNum!=null">#{item.sortNum}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.moduleTitle!=null">#{item.moduleTitle}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.ifShow!=null">#{item.ifShow}</when><otherwise> NULL </otherwise></choose>,
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">"ID",</when><otherwise>"ID",</otherwise></choose>
                <choose><when test="item.moduleName!=null">"MODULE_NAME",</when><otherwise></otherwise></choose>
                <choose><when test="item.moduleUrl!=null">"MODULE_URL",</when><otherwise></otherwise></choose>
                <choose><when test="item.moduleCategoryId!=null">"MODULE_CATEGORY_ID",</when><otherwise></otherwise></choose>
                <choose><when test="item.sortNum!=null">"SORT_NUM",</when><otherwise></otherwise></choose>
                <choose><when test="item.moduleTitle!=null">"MODULE_TITLE",</when><otherwise></otherwise></choose>
                <choose><when test="item.ifShow!=null">"IF_SHOW",</when><otherwise></otherwise></choose>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.id!=null">#{item.id},</when><otherwise><include refid="sequenceNextValSql"/>,</otherwise></choose>
                <choose><when test="item.moduleName!=null">#{item.moduleName},</when><otherwise></otherwise></choose>
                <choose><when test="item.moduleUrl!=null">#{item.moduleUrl},</when><otherwise></otherwise></choose>
                <choose><when test="item.moduleCategoryId!=null">#{item.moduleCategoryId},</when><otherwise></otherwise></choose>
                <choose><when test="item.sortNum!=null">#{item.sortNum},</when><otherwise></otherwise></choose>
                <choose><when test="item.moduleTitle!=null">#{item.moduleTitle},</when><otherwise></otherwise></choose>
                <choose><when test="item.ifShow!=null">#{item.ifShow},</when><otherwise></otherwise></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="moduleName!=null">MODULE_NAME=#{moduleName}</when> <otherwise> MODULE_NAME=NULL</otherwise> </choose>,
                    <choose> <when test="moduleUrl!=null">MODULE_URL=#{moduleUrl}</when> <otherwise> MODULE_URL=NULL</otherwise> </choose>,
                    <choose> <when test="moduleCategoryId!=null">MODULE_CATEGORY_ID=#{moduleCategoryId}</when> <otherwise> MODULE_CATEGORY_ID=NULL</otherwise> </choose>,
                    <choose> <when test="sortNum!=null">SORT_NUM=#{sortNum}</when> <otherwise> SORT_NUM=NULL</otherwise> </choose>,
                    <choose> <when test="moduleTitle!=null">MODULE_TITLE=#{moduleTitle}</when> <otherwise> MODULE_TITLE=NULL</otherwise> </choose>,
                    <choose> <when test="ifShow!=null">IF_SHOW=#{ifShow}</when> <otherwise> IF_SHOW=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="moduleName!=null">MODULE_NAME=#{moduleName},</when></choose>
                    <choose><when test="moduleUrl!=null">MODULE_URL=#{moduleUrl},</when></choose>
                    <choose><when test="moduleCategoryId!=null">MODULE_CATEGORY_ID=#{moduleCategoryId},</when></choose>
                    <choose><when test="sortNum!=null">SORT_NUM=#{sortNum},</when></choose>
                    <choose><when test="moduleTitle!=null">MODULE_TITLE=#{moduleTitle},</when></choose>
                    <choose><when test="ifShow!=null">IF_SHOW=#{ifShow},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        WHERE 1=1
            AND ID = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        WHERE 1=1
            AND ID = #{id}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.moduleName!=null">MODULE_NAME=#{item.moduleName}</when> <otherwise> MODULE_NAME=NULL</otherwise> </choose>,
                    <choose> <when test="item.moduleUrl!=null">MODULE_URL=#{item.moduleUrl}</when> <otherwise> MODULE_URL=NULL</otherwise> </choose>,
                    <choose> <when test="item.moduleCategoryId!=null">MODULE_CATEGORY_ID=#{item.moduleCategoryId}</when> <otherwise> MODULE_CATEGORY_ID=NULL</otherwise> </choose>,
                    <choose> <when test="item.sortNum!=null">SORT_NUM=#{item.sortNum}</when> <otherwise> SORT_NUM=NULL</otherwise> </choose>,
                    <choose> <when test="item.moduleTitle!=null">MODULE_TITLE=#{item.moduleTitle}</when> <otherwise> MODULE_TITLE=NULL</otherwise> </choose>,
                    <choose> <when test="item.ifShow!=null">IF_SHOW=#{item.ifShow}</when> <otherwise> IF_SHOW=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.moduleName!=null">MODULE_NAME=#{item.moduleName},</when></choose>
                    <choose> <when test="item.moduleUrl!=null">MODULE_URL=#{item.moduleUrl},</when></choose>
                    <choose> <when test="item.moduleCategoryId!=null">MODULE_CATEGORY_ID=#{item.moduleCategoryId},</when></choose>
                    <choose> <when test="item.sortNum!=null">SORT_NUM=#{item.sortNum},</when></choose>
                    <choose> <when test="item.moduleTitle!=null">MODULE_TITLE=#{item.moduleTitle},</when></choose>
                    <choose> <when test="item.ifShow!=null">IF_SHOW=#{item.ifShow},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        WHERE 1=1
            AND ID = #{item.id}
    </sql>
    <!-- 这里可以加上表名@youyaboot数据库link名称 方便的切换数据库 由于oracle不同于其他数据库，需要自己建立CREATE DATABASE LINK youyabootlink,所以此处可以根据实际情况自己修改模板-->
    <sql id="tableSql">
        HXEY.SYS_MODULE
    </sql>
    <!--序列名默认使用SET_表名 如果您不是这样的取名风格，请手动修改下面的序列名 GET_SEQ_V_A_L_是应该通用函数 参考README.md-->
    <sql id="sequenceNextValSql">
        GET_SEQ_V_A_L_('SEQ_SYS_MODULE')
    </sql>
   <sql id="whereSqlModel">
        <if test="id!=null "> AND ID = #{id}</if>
        <if test="moduleName!=null "> AND MODULE_NAME = #{moduleName}</if>
        <if test="moduleUrl!=null "> AND MODULE_URL = #{moduleUrl}</if>
        <if test="moduleCategoryId!=null "> AND MODULE_CATEGORY_ID = #{moduleCategoryId}</if>
        <if test="sortNum!=null "> AND SORT_NUM = #{sortNum}</if>
        <if test="moduleTitle!=null "> AND MODULE_TITLE = #{moduleTitle}</if>
        <if test="ifShow!=null "> AND IF_SHOW = #{ifShow}</if>
                <if test="moduleNameFirst!=null "> AND MODULE_NAME <![CDATA[like]]>
                    '%' || #{moduleNameFirst} || '%'
                </if>
                <if test="moduleCategoryIdFirst!=null "> AND MODULE_CATEGORY_ID <![CDATA[=]]>
                            #{moduleCategoryIdFirst}
                </if>
                <if test="moduleTitleFirst!=null "> AND MODULE_TITLE <![CDATA[like]]>
                    '%' || #{moduleTitleFirst} || '%'
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'ID'">  ID </when>
                <when test="safeGroupBy != null and safeGroupBy == 'MODULE_NAME'">  MODULE_NAME </when>
                <when test="safeGroupBy != null and safeGroupBy == 'MODULE_URL'">  MODULE_URL </when>
                <when test="safeGroupBy != null and safeGroupBy == 'MODULE_CATEGORY_ID'">  MODULE_CATEGORY_ID </when>
                <when test="safeGroupBy != null and safeGroupBy == 'SORT_NUM'">  SORT_NUM </when>
                <when test="safeGroupBy != null and safeGroupBy == 'MODULE_TITLE'">  MODULE_TITLE </when>
                <when test="safeGroupBy != null and safeGroupBy == 'IF_SHOW'">  IF_SHOW </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and (safeOrderBy == 'ID desc'  or safeOrderBy == 'id desc')"> ORDER BY ID DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'ID asc'  or safeOrderBy == 'id asc')"> ORDER BY ID ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'MODULE_NAME desc'  or safeOrderBy == 'module_name desc')"> ORDER BY MODULE_NAME DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'MODULE_NAME asc'  or safeOrderBy == 'module_name asc')"> ORDER BY MODULE_NAME ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'MODULE_URL desc'  or safeOrderBy == 'module_url desc')"> ORDER BY MODULE_URL DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'MODULE_URL asc'  or safeOrderBy == 'module_url asc')"> ORDER BY MODULE_URL ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'MODULE_CATEGORY_ID desc'  or safeOrderBy == 'module_category_id desc')"> ORDER BY MODULE_CATEGORY_ID DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'MODULE_CATEGORY_ID asc'  or safeOrderBy == 'module_category_id asc')"> ORDER BY MODULE_CATEGORY_ID ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'SORT_NUM desc'  or safeOrderBy == 'sort_num desc')"> ORDER BY SORT_NUM DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'SORT_NUM asc'  or safeOrderBy == 'sort_num asc')"> ORDER BY SORT_NUM ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'MODULE_TITLE desc'  or safeOrderBy == 'module_title desc')"> ORDER BY MODULE_TITLE DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'MODULE_TITLE asc'  or safeOrderBy == 'module_title asc')"> ORDER BY MODULE_TITLE ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'IF_SHOW desc'  or safeOrderBy == 'if_show desc')"> ORDER BY IF_SHOW DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'IF_SHOW asc'  or safeOrderBy == 'if_show asc')"> ORDER BY IF_SHOW ASC </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <if test="limit == null">
            <include refid="safeGroupBy"/>
            <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> GROUP BY ${notSafeGroupBy}</if>
            <include refid="safeOrderBy"/>
            <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> ORDER BY ${notSafeOrderBy}</if>
        </if>
    </sql>
    <!--说到这 sqlserver的分页实在是复杂 个人还是中意 mysql的 limit 不过为了兼容sqlserver各个版本 还是采取以下方式，不用offset了-->
    <sql id="pageParam">
        <if test="limit != null">
            , ROW_NUMBER() OVER(<choose><when test="(safeOrderBy==null or safeOrderBy=='') and (notSafeOrderBy==null or notSafeOrderBy=='')"> ORDER BY ID </when><otherwise><include refid="safeOrderBy"/><if test="notSafeOrderBy != null and notSafeOrderBy != ''"> ORDER BY ${notSafeOrderBy}</if></otherwise></choose>)  AS MC_ROW_NUM_
        </if>
    </sql>
    <sql id="pageStart">
        <if test="limit != null">
            SELECT * FROM  (
        </if>
    </sql>
    <sql id="pageEnd">
        <if test="limit != null">
            ) MC_TMP_  WHERE <choose><when test="start != null">MC_ROW_NUM_ > #{start} AND MC_ROW_NUM_ <![CDATA[<=]]> #{start}+#{limit}</when><otherwise> MC_ROW_NUM_ <![CDATA[<=]]> #{limit}</otherwise></choose>
        </if>
    </sql>
</mapper>
