<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 软件作者：何栋宇 qq:709876443
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:648595928
-->
<mapper namespace="com.magicalcoder.youyaboot.service.flumzdata.mapper.FluMzdataMapper">
    <!-- FluMzdata -->
    <resultMap id="resultMap" type="FluMzdata">
        <id column="ADMID" property="admid"/>
        <result column="PATYPE" property="patype" />
        <result column="PATDEPT" property="patdept" />
        <result column="PATIENTNAME" property="patientname" />
        <result column="SEX" property="sex" />
        <result column="PAPMINO" property="papmino" />
        <result column="BIRTHDATE" property="birthdate" />
        <result column="AGE" property="age" />
        <result column="ISZD" property="iszd" />
        <result column="PATIDNO" property="patidno" />
        <result column="ADMDAT" property="admdat" />
        <result column="PATZS" property="patzs" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        SELECT  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        FROM  <include refid="tableSql"/>  WHERE 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        SELECT  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        FROM  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        <include refid="pageStart"/>
        SELECT  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        <include refid="pageParam"/>
        FROM  <include refid="tableSql"/>  WHERE 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
        <include refid="pageEnd"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        <include refid="pageStart"/>
        SELECT  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        <include refid="pageParam"/>
        FROM  <include refid="tableSql"/>  WHERE  "ADMID" IN
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
        <include refid="pageEnd"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        SELECT count(1)  FROM  <include refid="tableSql"/>  WHERE 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="FluMzdata"  useGeneratedKeys="true" keyProperty="admid" >
        <selectKey resultType="string" order="BEFORE" keyProperty="admid">SELECT <choose><when test="admid==null"> <include refid="sequenceNextValSql"/> </when><otherwise> #{admid} </otherwise></choose>FROM DUAL</selectKey>
        INSERT into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="FluMzdata"  useGeneratedKeys="true" keyProperty="admid" >
        <!-- 很抱歉 oracle 没有像mysql replace into 这样 的语句-->
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="FluMzdata"  useGeneratedKeys="true" keyProperty="admid" >
        <selectKey resultType="string" order="BEFORE" keyProperty="admid">SELECT <choose><when test="admid==null"> <include refid="sequenceNextValSql"/> </when><otherwise> #{admid} </otherwise></choose>FROM DUAL</selectKey>
        INSERT into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="FluMzdata"  useGeneratedKeys="true" keyProperty="admid" >
        <!-- 很抱歉 oracle 没有像mysql replace into 这样 的语句-->
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="false" keyProperty="admid" >
        INSERT all
        <foreach collection="list" item="item" index="index" open="" close="" separator="">
            into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
        SELECT 1 FROM DUAL
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="false" keyProperty="admid" >
        <!-- 很抱歉 oracle 没有像mysql replace into 这样 的语句-->
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="false" keyProperty="admid" >
        INSERT all
        <foreach collection="list" item="item" index="index" open="" close="" separator="">
            into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
        SELECT 1 FROM DUAL
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="false" keyProperty="admid" >
        <!-- 很抱歉 oracle 没有像mysql replace into 这样 的语句-->
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        DELETE FROM <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        DELETE FROM <include refid="tableSql"/> WHERE 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        DELETE FROM <include refid="tableSql"/> WHERE "ADMID" IN <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="FluMzdata">
        UPDATE <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="FluMzdata">
        UPDATE <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            UPDATE <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            UPDATE <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="admidIgnore_ == null or !admidIgnore_">"ADMID",</if>
            <if test="patypeIgnore_ == null or !patypeIgnore_">"PATYPE",</if>
            <if test="patdeptIgnore_ == null or !patdeptIgnore_">"PATDEPT",</if>
            <if test="patientnameIgnore_ == null or !patientnameIgnore_">"PATIENTNAME",</if>
            <if test="sexIgnore_ == null or !sexIgnore_">"SEX",</if>
            <if test="papminoIgnore_ == null or !papminoIgnore_">"PAPMINO",</if>
            <if test="birthdateIgnore_ == null or !birthdateIgnore_">"BIRTHDATE",</if>
            <if test="ageIgnore_ == null or !ageIgnore_">"AGE",</if>
            <if test="iszdIgnore_ == null or !iszdIgnore_">"ISZD",</if>
            <if test="patidnoIgnore_ == null or !patidnoIgnore_">"PATIDNO",</if>
            <if test="admdatIgnore_ == null or !admdatIgnore_">"ADMDAT",</if>
            <if test="patzsIgnore_ == null or !patzsIgnore_">"PATZS"</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="admidNotIgnore_ != null and admidNotIgnore_">"ADMID",</if>
         <if test="patypeNotIgnore_ != null and patypeNotIgnore_">"PATYPE",</if>
         <if test="patdeptNotIgnore_ != null and patdeptNotIgnore_">"PATDEPT",</if>
         <if test="patientnameNotIgnore_ != null and patientnameNotIgnore_">"PATIENTNAME",</if>
         <if test="sexNotIgnore_ != null and sexNotIgnore_">"SEX",</if>
         <if test="papminoNotIgnore_ != null and papminoNotIgnore_">"PAPMINO",</if>
         <if test="birthdateNotIgnore_ != null and birthdateNotIgnore_">"BIRTHDATE",</if>
         <if test="ageNotIgnore_ != null and ageNotIgnore_">"AGE",</if>
         <if test="iszdNotIgnore_ != null and iszdNotIgnore_">"ISZD",</if>
         <if test="patidnoNotIgnore_ != null and patidnoNotIgnore_">"PATIDNO",</if>
         <if test="admdatNotIgnore_ != null and admdatNotIgnore_">"ADMDAT",</if>
         <if test="patzsNotIgnore_ != null and patzsNotIgnore_">"PATZS"</if>
        </trim>
    </sql>
    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="admid!=null">"ADMID",</if> "PATYPE","PATDEPT","PATIENTNAME","SEX","PAPMINO","BIRTHDATE","AGE","ISZD","PATIDNO","ADMDAT","PATZS",
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="admid!=null">#{admid},</when></choose>
                <choose><when test="patype!=null">#{patype},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="patdept!=null">#{patdept},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="patientname!=null">#{patientname},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="sex!=null">#{sex},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="papmino!=null">#{papmino},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="birthdate!=null">#{birthdate},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="age!=null">#{age},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="iszd!=null">#{iszd},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="patidno!=null">#{patidno},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="admdat!=null">#{admdat},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="patzs!=null">#{patzs},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="admid!=null">"ADMID",</if>
                <if test="patype!=null">"PATYPE",</if>
                <if test="patdept!=null">"PATDEPT",</if>
                <if test="patientname!=null">"PATIENTNAME",</if>
                <if test="sex!=null">"SEX",</if>
                <if test="papmino!=null">"PAPMINO",</if>
                <if test="birthdate!=null">"BIRTHDATE",</if>
                <if test="age!=null">"AGE",</if>
                <if test="iszd!=null">"ISZD",</if>
                <if test="patidno!=null">"PATIDNO",</if>
                <if test="admdat!=null">"ADMDAT",</if>
                <if test="patzs!=null">"PATZS",</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="admid!=null">#{admid},</when></choose>
                <choose><when test="patype!=null">#{patype},</when></choose>
                <choose><when test="patdept!=null">#{patdept},</when></choose>
                <choose><when test="patientname!=null">#{patientname},</when></choose>
                <choose><when test="sex!=null">#{sex},</when></choose>
                <choose><when test="papmino!=null">#{papmino},</when></choose>
                <choose><when test="birthdate!=null">#{birthdate},</when></choose>
                <choose><when test="age!=null">#{age},</when></choose>
                <choose><when test="iszd!=null">#{iszd},</when></choose>
                <choose><when test="patidno!=null">#{patidno},</when></choose>
                <choose><when test="admdat!=null">#{admdat},</when></choose>
                <choose><when test="patzs!=null">#{patzs},</when></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                "ADMID",
                "PATYPE",
                "PATDEPT",
                "PATIENTNAME",
                "SEX",
                "PAPMINO",
                "BIRTHDATE",
                "AGE",
                "ISZD",
                "PATIDNO",
                "ADMDAT",
                "PATZS",

        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.admid!=null">#{item.admid}</when><otherwise><include refid="sequenceNextValSql"/></otherwise></choose>,
                <choose><when test="item.patype!=null">#{item.patype}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.patdept!=null">#{item.patdept}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.patientname!=null">#{item.patientname}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.sex!=null">#{item.sex}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.papmino!=null">#{item.papmino}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.birthdate!=null">#{item.birthdate}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.age!=null">#{item.age}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.iszd!=null">#{item.iszd}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.patidno!=null">#{item.patidno}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.admdat!=null">#{item.admdat}</when><otherwise> NULL </otherwise></choose>,
                <choose><when test="item.patzs!=null">#{item.patzs}</when><otherwise> NULL </otherwise></choose>,
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.admid!=null">"ADMID",</when><otherwise>"ADMID",</otherwise></choose>
                <choose><when test="item.patype!=null">"PATYPE",</when><otherwise></otherwise></choose>
                <choose><when test="item.patdept!=null">"PATDEPT",</when><otherwise></otherwise></choose>
                <choose><when test="item.patientname!=null">"PATIENTNAME",</when><otherwise></otherwise></choose>
                <choose><when test="item.sex!=null">"SEX",</when><otherwise></otherwise></choose>
                <choose><when test="item.papmino!=null">"PAPMINO",</when><otherwise></otherwise></choose>
                <choose><when test="item.birthdate!=null">"BIRTHDATE",</when><otherwise></otherwise></choose>
                <choose><when test="item.age!=null">"AGE",</when><otherwise></otherwise></choose>
                <choose><when test="item.iszd!=null">"ISZD",</when><otherwise></otherwise></choose>
                <choose><when test="item.patidno!=null">"PATIDNO",</when><otherwise></otherwise></choose>
                <choose><when test="item.admdat!=null">"ADMDAT",</when><otherwise></otherwise></choose>
                <choose><when test="item.patzs!=null">"PATZS",</when><otherwise></otherwise></choose>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.admid!=null">#{item.admid},</when><otherwise><include refid="sequenceNextValSql"/>,</otherwise></choose>
                <choose><when test="item.patype!=null">#{item.patype},</when><otherwise></otherwise></choose>
                <choose><when test="item.patdept!=null">#{item.patdept},</when><otherwise></otherwise></choose>
                <choose><when test="item.patientname!=null">#{item.patientname},</when><otherwise></otherwise></choose>
                <choose><when test="item.sex!=null">#{item.sex},</when><otherwise></otherwise></choose>
                <choose><when test="item.papmino!=null">#{item.papmino},</when><otherwise></otherwise></choose>
                <choose><when test="item.birthdate!=null">#{item.birthdate},</when><otherwise></otherwise></choose>
                <choose><when test="item.age!=null">#{item.age},</when><otherwise></otherwise></choose>
                <choose><when test="item.iszd!=null">#{item.iszd},</when><otherwise></otherwise></choose>
                <choose><when test="item.patidno!=null">#{item.patidno},</when><otherwise></otherwise></choose>
                <choose><when test="item.admdat!=null">#{item.admdat},</when><otherwise></otherwise></choose>
                <choose><when test="item.patzs!=null">#{item.patzs},</when><otherwise></otherwise></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="patype!=null">"PATYPE"=#{patype}</when> <otherwise> "PATYPE"=NULL</otherwise> </choose>,
                    <choose> <when test="patdept!=null">"PATDEPT"=#{patdept}</when> <otherwise> "PATDEPT"=NULL</otherwise> </choose>,
                    <choose> <when test="patientname!=null">"PATIENTNAME"=#{patientname}</when> <otherwise> "PATIENTNAME"=NULL</otherwise> </choose>,
                    <choose> <when test="sex!=null">"SEX"=#{sex}</when> <otherwise> "SEX"=NULL</otherwise> </choose>,
                    <choose> <when test="papmino!=null">"PAPMINO"=#{papmino}</when> <otherwise> "PAPMINO"=NULL</otherwise> </choose>,
                    <choose> <when test="birthdate!=null">"BIRTHDATE"=#{birthdate}</when> <otherwise> "BIRTHDATE"=NULL</otherwise> </choose>,
                    <choose> <when test="age!=null">"AGE"=#{age}</when> <otherwise> "AGE"=NULL</otherwise> </choose>,
                    <choose> <when test="iszd!=null">"ISZD"=#{iszd}</when> <otherwise> "ISZD"=NULL</otherwise> </choose>,
                    <choose> <when test="patidno!=null">"PATIDNO"=#{patidno}</when> <otherwise> "PATIDNO"=NULL</otherwise> </choose>,
                    <choose> <when test="admdat!=null">"ADMDAT"=#{admdat}</when> <otherwise> "ADMDAT"=NULL</otherwise> </choose>,
                    <choose> <when test="patzs!=null">"PATZS"=#{patzs}</when> <otherwise> "PATZS"=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="patype!=null">"PATYPE"=#{patype},</when></choose>
                    <choose><when test="patdept!=null">"PATDEPT"=#{patdept},</when></choose>
                    <choose><when test="patientname!=null">"PATIENTNAME"=#{patientname},</when></choose>
                    <choose><when test="sex!=null">"SEX"=#{sex},</when></choose>
                    <choose><when test="papmino!=null">"PAPMINO"=#{papmino},</when></choose>
                    <choose><when test="birthdate!=null">"BIRTHDATE"=#{birthdate},</when></choose>
                    <choose><when test="age!=null">"AGE"=#{age},</when></choose>
                    <choose><when test="iszd!=null">"ISZD"=#{iszd},</when></choose>
                    <choose><when test="patidno!=null">"PATIDNO"=#{patidno},</when></choose>
                    <choose><when test="admdat!=null">"ADMDAT"=#{admdat},</when></choose>
                    <choose><when test="patzs!=null">"PATZS"=#{patzs},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        WHERE 1=1
            AND "ADMID" = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        WHERE 1=1
            AND "ADMID" = #{admid}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.patype!=null">"PATYPE"=#{item.patype}</when> <otherwise> "PATYPE"=NULL</otherwise> </choose>,
                    <choose> <when test="item.patdept!=null">"PATDEPT"=#{item.patdept}</when> <otherwise> "PATDEPT"=NULL</otherwise> </choose>,
                    <choose> <when test="item.patientname!=null">"PATIENTNAME"=#{item.patientname}</when> <otherwise> "PATIENTNAME"=NULL</otherwise> </choose>,
                    <choose> <when test="item.sex!=null">"SEX"=#{item.sex}</when> <otherwise> "SEX"=NULL</otherwise> </choose>,
                    <choose> <when test="item.papmino!=null">"PAPMINO"=#{item.papmino}</when> <otherwise> "PAPMINO"=NULL</otherwise> </choose>,
                    <choose> <when test="item.birthdate!=null">"BIRTHDATE"=#{item.birthdate}</when> <otherwise> "BIRTHDATE"=NULL</otherwise> </choose>,
                    <choose> <when test="item.age!=null">"AGE"=#{item.age}</when> <otherwise> "AGE"=NULL</otherwise> </choose>,
                    <choose> <when test="item.iszd!=null">"ISZD"=#{item.iszd}</when> <otherwise> "ISZD"=NULL</otherwise> </choose>,
                    <choose> <when test="item.patidno!=null">"PATIDNO"=#{item.patidno}</when> <otherwise> "PATIDNO"=NULL</otherwise> </choose>,
                    <choose> <when test="item.admdat!=null">"ADMDAT"=#{item.admdat}</when> <otherwise> "ADMDAT"=NULL</otherwise> </choose>,
                    <choose> <when test="item.patzs!=null">"PATZS"=#{item.patzs}</when> <otherwise> "PATZS"=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.patype!=null">"PATYPE"=#{item.patype},</when></choose>
                    <choose> <when test="item.patdept!=null">"PATDEPT"=#{item.patdept},</when></choose>
                    <choose> <when test="item.patientname!=null">"PATIENTNAME"=#{item.patientname},</when></choose>
                    <choose> <when test="item.sex!=null">"SEX"=#{item.sex},</when></choose>
                    <choose> <when test="item.papmino!=null">"PAPMINO"=#{item.papmino},</when></choose>
                    <choose> <when test="item.birthdate!=null">"BIRTHDATE"=#{item.birthdate},</when></choose>
                    <choose> <when test="item.age!=null">"AGE"=#{item.age},</when></choose>
                    <choose> <when test="item.iszd!=null">"ISZD"=#{item.iszd},</when></choose>
                    <choose> <when test="item.patidno!=null">"PATIDNO"=#{item.patidno},</when></choose>
                    <choose> <when test="item.admdat!=null">"ADMDAT"=#{item.admdat},</when></choose>
                    <choose> <when test="item.patzs!=null">"PATZS"=#{item.patzs},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        WHERE 1=1
            AND "ADMID" = #{item.admid}
    </sql>
    <!-- 这里可以加上表名@orcl数据库link名称 方便的切换数据库 由于oracle不同于其他数据库，需要自己建立CREATE DATABASE LINK youyabootlink,所以此处可以根据实际情况自己修改模板-->
    <sql id="tableSql">
        FLU_MZDATA
    </sql>
    <!--序列名默认使用SET_表名 如果您不是这样的取名风格，请手动修改下面的序列名 GET_SEQ_V_A_L_是提前建立的全局通用获取自增序列的函数 参考README.md-->
    <sql id="sequenceNextValSql">
        GET_SEQ_V_A_L_('SEQ_FLU_MZDATA')
    </sql>
   <sql id="whereSqlModel">
        <if test="admid!=null "> AND "ADMID" = #{admid}</if>
        <if test="patype!=null "> AND "PATYPE" = #{patype}</if>
        <if test="patdept!=null "> AND "PATDEPT" = #{patdept}</if>
        <if test="patientname!=null "> AND "PATIENTNAME" = #{patientname}</if>
        <if test="sex!=null "> AND "SEX" = #{sex}</if>
        <if test="papmino!=null "> AND "PAPMINO" = #{papmino}</if>
        <if test="birthdate!=null "> AND "BIRTHDATE" = #{birthdate}</if>
        <if test="age!=null "> AND "AGE" = #{age}</if>
        <if test="iszd!=null "> AND "ISZD" = #{iszd}</if>
        <if test="patidno!=null "> AND "PATIDNO" = #{patidno}</if>
        <if test="admdat!=null "> AND "ADMDAT" = #{admdat}</if>
        <if test="patzs!=null "> AND "PATZS" = #{patzs}</if>
                <if test="admidFirst!=null "> AND "ADMID" <![CDATA[=]]>
                            #{admidFirst}
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'ADMID'">  ADMID </when>
                <when test="safeGroupBy != null and safeGroupBy == 'PATYPE'">  PATYPE </when>
                <when test="safeGroupBy != null and safeGroupBy == 'PATDEPT'">  PATDEPT </when>
                <when test="safeGroupBy != null and safeGroupBy == 'PATIENTNAME'">  PATIENTNAME </when>
                <when test="safeGroupBy != null and safeGroupBy == 'SEX'">  SEX </when>
                <when test="safeGroupBy != null and safeGroupBy == 'PAPMINO'">  PAPMINO </when>
                <when test="safeGroupBy != null and safeGroupBy == 'BIRTHDATE'">  BIRTHDATE </when>
                <when test="safeGroupBy != null and safeGroupBy == 'AGE'">  AGE </when>
                <when test="safeGroupBy != null and safeGroupBy == 'ISZD'">  ISZD </when>
                <when test="safeGroupBy != null and safeGroupBy == 'PATIDNO'">  PATIDNO </when>
                <when test="safeGroupBy != null and safeGroupBy == 'ADMDAT'">  ADMDAT </when>
                <when test="safeGroupBy != null and safeGroupBy == 'PATZS'">  PATZS </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and (safeOrderBy == 'ADMID DESC'  or safeOrderBy == 'admid desc')"> ORDER BY "ADMID" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'ADMID ASC'  or safeOrderBy == 'admid asc')"> ORDER BY "ADMID" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATYPE DESC'  or safeOrderBy == 'patype desc')"> ORDER BY "PATYPE" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATYPE ASC'  or safeOrderBy == 'patype asc')"> ORDER BY "PATYPE" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATDEPT DESC'  or safeOrderBy == 'patdept desc')"> ORDER BY "PATDEPT" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATDEPT ASC'  or safeOrderBy == 'patdept asc')"> ORDER BY "PATDEPT" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATIENTNAME DESC'  or safeOrderBy == 'patientname desc')"> ORDER BY "PATIENTNAME" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATIENTNAME ASC'  or safeOrderBy == 'patientname asc')"> ORDER BY "PATIENTNAME" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'SEX DESC'  or safeOrderBy == 'sex desc')"> ORDER BY "SEX" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'SEX ASC'  or safeOrderBy == 'sex asc')"> ORDER BY "SEX" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PAPMINO DESC'  or safeOrderBy == 'papmino desc')"> ORDER BY "PAPMINO" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PAPMINO ASC'  or safeOrderBy == 'papmino asc')"> ORDER BY "PAPMINO" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'BIRTHDATE DESC'  or safeOrderBy == 'birthdate desc')"> ORDER BY "BIRTHDATE" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'BIRTHDATE ASC'  or safeOrderBy == 'birthdate asc')"> ORDER BY "BIRTHDATE" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'AGE DESC'  or safeOrderBy == 'age desc')"> ORDER BY "AGE" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'AGE ASC'  or safeOrderBy == 'age asc')"> ORDER BY "AGE" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'ISZD DESC'  or safeOrderBy == 'iszd desc')"> ORDER BY "ISZD" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'ISZD ASC'  or safeOrderBy == 'iszd asc')"> ORDER BY "ISZD" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATIDNO DESC'  or safeOrderBy == 'patidno desc')"> ORDER BY "PATIDNO" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATIDNO ASC'  or safeOrderBy == 'patidno asc')"> ORDER BY "PATIDNO" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'ADMDAT DESC'  or safeOrderBy == 'admdat desc')"> ORDER BY "ADMDAT" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'ADMDAT ASC'  or safeOrderBy == 'admdat asc')"> ORDER BY "ADMDAT" ASC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATZS DESC'  or safeOrderBy == 'patzs desc')"> ORDER BY "PATZS" DESC </when>
                <when test="safeOrderBy != null and (safeOrderBy == 'PATZS ASC'  or safeOrderBy == 'patzs asc')"> ORDER BY "PATZS" ASC </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <if test="limit == null">
            <include refid="safeGroupBy"/>
            <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> GROUP BY ${notSafeGroupBy}</if>
            <include refid="safeOrderBy"/>
            <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> ORDER BY ${notSafeOrderBy}</if>
        </if>
    </sql>
    <!--说到这 sqlserver的分页实在是复杂 个人还是中意 mysql的 limit 不过为了兼容sqlserver各个版本 还是采取以下方式，不用offset了-->
    <sql id="pageParam">
        <if test="limit != null">
            , ROW_NUMBER() OVER(<choose><when test="(safeOrderBy==null or safeOrderBy=='') and (notSafeOrderBy==null or notSafeOrderBy=='')"> ORDER BY "ADMID" </when><otherwise><include refid="safeOrderBy"/><if test="notSafeOrderBy != null and notSafeOrderBy != ''"> ORDER BY ${notSafeOrderBy}</if></otherwise></choose>)  AS MC_ROW_NUM_
        </if>
    </sql>
    <sql id="pageStart">
        <if test="limit != null">
            SELECT * FROM  (
        </if>
    </sql>
    <sql id="pageEnd">
        <if test="limit != null">
            ) MC_TMP_  WHERE <choose><when test="start != null">MC_ROW_NUM_ > #{start} AND MC_ROW_NUM_ <![CDATA[<=]]> #{start}+#{limit}</when><otherwise> MC_ROW_NUM_ <![CDATA[<=]]> #{limit}</otherwise></choose>
        </if>
    </sql>
</mapper>
